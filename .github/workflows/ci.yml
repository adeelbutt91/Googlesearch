name: specflow-ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: windows-latest
    env:
      CI: "true" # Ensures Chrome runs headless

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run NUnit tests
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=TestResults.trx"

      - name: Find Test DLL and TestExecution.json
        id: paths
        shell: pwsh
        run: |
          $dll = Get-ChildItem -Recurse -Filter *.dll | Where-Object { $_.FullName -match "bin\\Release\\net8.0" -and $_.Name -notmatch "testhost|nunit|SpecFlow" } | Select-Object -First 1
          echo "dll=$($dll.FullName)" >> $env:GITHUB_OUTPUT
          $json = Join-Path $dll.Directory.FullName "TestExecution.json"
          echo "json=$json" >> $env:GITHUB_OUTPUT

      - name: Install SpecFlow LivingDoc CLI
        run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI

      - name: Add .NET tools to PATH
        shell: pwsh
        run: echo "$env:USERPROFILE\.dotnet\tools" >> $env:GITHUB_PATH

      - name: Generate LivingDoc report
        shell: pwsh
        run: |
          livingdoc test-assembly "${{ steps.paths.outputs.dll }}" -t "${{ steps.paths.outputs.json }}" -o LivingDoc.html

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            **/TestResults.trx
            LivingDoc.html
            **/TestExecution.json
